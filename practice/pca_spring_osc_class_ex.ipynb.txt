{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import cv2\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Frame Rate:  29.579126786416676\n",
      "Number of Frames:  1128.0\n"
     ]
    }
   ],
   "source": [
    "cap = cv2.VideoCapture('spring-osc-trim.mov')\n",
    "num_frames = cap.get(cv2.CAP_PROP_FRAME_COUNT)\n",
    "fps = cap.get(cv2.CAP_PROP_FPS)\n",
    "\n",
    "print('Frame Rate: ', fps)\n",
    "print('Number of Frames: ', num_frames)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Read frames from the video\n",
    "frames = []\n",
    "while True:\n",
    "    ret, frame = cap.read()\n",
    "    if not ret:\n",
    "        break\n",
    "\n",
    "    bw_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n",
    "    res_frame = cv2.resize(bw_frame, (bw_frame.shape[1] // 4, bw_frame.shape[0] // 4))\n",
    "    frames.append(res_frame)\n",
    "\n",
    "all_frames = np.stack(frames)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(480, 270)\n",
      "Shape of the black and white array: (1113, 480, 270)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(480, 270, 1113)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(all_frames[0].shape)\n",
    "\n",
    "# Print the shape of the array\n",
    "print(\"Shape of the black and white array:\", all_frames.shape)\n",
    "\n",
    "# reshape to 3d array to (1, 2, 0): permute the axes\n",
    "all_frames = all_frames.transpose(1, 2, 0)\n",
    "all_frames.shape"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
